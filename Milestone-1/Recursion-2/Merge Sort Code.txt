Merge Sort Code

Sort an array A using Merge Sort.
Change in the input array itself. So no need to return or print anything.

Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)

Constraints :
1 <= n <= 10^3

Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8

Sample Input 2 :
5
2 1 5 2 3
Sample Output 2 :
1 2 2 3 5 


public class solution {

	
    
     public static void merge(int input[],int start,int mid,int end){
        
    int a = start;
    int b= mid;
    int []temp=new int [end+1];
    int index=start;
        
        
        while(a<mid && b<end+1){
            
            
            if(input[a]<input[b]){
            temp[index] = input[a];
            index++;
            a++;
            }
            else{
            temp[index] = input[b];
            index++;
            b++;
            }
            
        }
        
         while(a<mid ){
             temp[index] = input[a]; 
             index++;
             a++;
         }
            
        while(b<end+1){
             temp[index] = input[b]; 
             index++;
             b++;
             
         }
    //         for(int i=0;i<temp.length;i++)
    //   System.out.println(temp[i]);
      
        for(int i=start;i<end+1;i++)
        input[i] = temp[i];
   
    
    
    
  
     
     
     
     
    
    }
    
    public static void divide(int[] input,int start,int end){
        
        
        if(start<end){
            
            int mid = (start + end)/2;
            divide(input,start,mid);
            divide(input,mid+1,end);
            merge(input,start,mid+1,end);
            
            
        }
        
        
        
    }
    
    
    
    public static void mergeSort(int[] input){
		// Write your code here
        divide(input,0,input.length-1);
        
		
	}
}

