
Islands
Send Feedback
An island is a small piece of land surrounded by water . A group of islands is said to be connected if we can reach from any given island to any other island in the same group . Given V islands (numbered from 0 to V-1) and E connections or edges between islands. Can you count the number of connected groups of islands.
Input Format :
The first line of input contains two integers, that denote the value of V and E.
Each of the following E lines contains two integers, that denote that there exists an edge between vertex a and b. 
Output Format :
Print the count the number of connected groups of islands
Constraints :
0 <= V <= 1000
0 <= E <= (V * (V-1)) / 2
0 <= a <= V - 1
0 <= b <= V - 1
Time Limit: 1 second
Sample Input 1:
5 8
0 1
0 4
1 2
2 0
2 4
3 0
3 2
4 3
Sample Output 1:
1 


import java.util.*;
public class Solution {

	public static int count=0;
 public static ArrayList<Integer>  helper(int edge[][],int sv,boolean vesited [] ){
vesited[sv] = true;
Queue<Integer> q = new LinkedList<>();
q.add(sv);
ArrayList<Integer> ans = new ArrayList<>();
ans.add(sv);
count++;
while(!q.isEmpty()){
int front = q.remove();
for(int i=0;i<edge.length;i++){



	if(edge[front][i]==1 && !vesited[i]){
		q.add(i);
		// ans.add(i);
		vesited[i] = true;
	}
}


}

return ans;
}

	public static void printbfs(int edge[][]) {

		boolean vesited[] = new boolean[edge.length];
		ArrayList<ArrayList<Integer>> output = new ArrayList<>();

		for (int i = 0; i < edge.length; i++) {

			if (!vesited[i]) {
			output.add(	helper(edge, i, vesited));
			
			}
		}
    //  return output;
	}

	public static int numConnected(int[][] edges, int n) {
        
	 printbfs(edges);
	return count;
	}


}


